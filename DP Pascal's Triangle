// This is Java Solution to Dp problem Pascal's Triangle where input is a number and you need to for a triangele
//Example n = 4
//  1
//  1 1
//  1 2 1
//  1 3 3 1
class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> triangle = new ArrayList<>(); // we intialized an array list which will have another array list
        if(numRows == 0)
        {
            return triangle;
        }
        for(int i = 0; i<numRows; i++)
        {
            List<Integer> row = new ArrayList<>();
            row.add(1); // that is first element
            if(i>0) // when we are working on adding elements for second row onwards
            {
                List<Integer> prevRow = triangle.get(i-1);

            for(int j = 1;j<i;j++)
            {
                int sum = prevRow.get(j-1) + prevRow.get(j);
                row.add(sum);
            }

            }
            if(i>0)
            {
                row.add(1);
            }
            triangle.add(row);
        }
        return triangle;
    }
}
